package com.visa.training.bookwithboot.web;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.visa.training.bookwithboot.domain.Book;
import com.visa.training.bookwithboot.service.BookService;

@RestController
public class BookRestController {
	
	@Autowired
	BookService service;
	
	@RequestMapping(value="/api/books", method = RequestMethod.GET)
	public List<Book> getAll(){
		return service.findAll();
	}
	
	@RequestMapping(value="/api/books/{id}", method = RequestMethod.GET)
	public ResponseEntity<Book> getById(@PathVariable("id") int id){
		Book found = service.findById(id);
		if (found == null) {
//			System.out.println("----------------I am here---------------");
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		} else return new ResponseEntity<Book>(found, HttpStatus.OK);
	}
	
	@RequestMapping(value="/api/books", method = RequestMethod.POST)
	public ResponseEntity createBook(@RequestBody Book toBeCreated){
		try {
			int id = service.addNewBook(toBeCreated);
			HttpHeaders headers = new HttpHeaders();
			headers.setLocation(URI.create("/api/books/"+id));
			return new ResponseEntity<>(headers, HttpStatus.CREATED);
		} catch (IllegalArgumentException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace();
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
	}
}
